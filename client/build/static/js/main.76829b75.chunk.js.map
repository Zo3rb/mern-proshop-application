{"version":3,"sources":["redux/constants/userConstants.js","redux/constants/orderConstants.js","redux/actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Meta.js","redux/constants/productConstants.js","redux/actions/productAction.js","components/ProductCarousel.js","components/Paginate.js","screens/HomeScreen.js","screens/ProductScreen.js","redux/constants/cartConstants.js","redux/actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","redux/actions/orderActions.js","screens/ProfileScreen.js","screens/RegisterScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","redux/reducers/cartReducer.js","redux/store.js","redux/reducers/productReducer.js","redux/reducers/userReducer.js","redux/reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_BY_ADMIN_REQUEST","USER_UPDATE_BY_ADMIN_SUCCESS","USER_UPDATE_BY_ADMIN_FAIL","USER_UPDATE_BY_ADMIN_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","API_URL","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","axios","get","headers","Authorization","token","data","payload","response","message","SearchBox","history","useHistory","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","placeholder","onChange","target","value","className","Button","variant","Header","useDispatch","useSelector","state","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","product","Card","_id","Img","src","image","onError","onerror","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Meta","description","keywords","Helmet","content","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","pageNumber","listProductDetails","ProductCarousel","productTopRated","loading","error","products","useEffect","Carousel","pause","map","Image","alt","fluid","Caption","Paginate","pages","page","Pagination","Array","keys","x","active","HomeScreen","match","params","productList","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","errorProductReview","successProductReview","success","alert","ListGroup","countInStock","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","location","search","Number","split","removeFromCartHandler","removeItemFromCart","item","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","loginUser","ProfileScreen","setName","confirmPassword","setConfirmPassword","setMessage","userDetails","user","userUpdate","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","RegisterScreen","userRegister","registerUser","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","fullAddress","required","PaymentScreen","paymentMethod","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","userUpdater","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","productDelete","errorDelete","loadingDelete","productCreate","successCreate","errorCreate","loadingCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","console","submitHandler","updateProduct","File","custom","resize","overflowY","OrderListScreen","orderList","App","exact","path","component","cartReducer","action","existItem","find","filter","reducer","combineReducers","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.76829b75.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_BY_ADMIN_REQUEST = 'USER_UPDATE_BY_ADMIN_REQUEST';\r\nexport const USER_UPDATE_BY_ADMIN_SUCCESS = 'USER_UPDATE_BY_ADMIN_SUCCESS';\r\nexport const USER_UPDATE_BY_ADMIN_FAIL = 'USER_UPDATE_BY_ADMIN_FAIL';\r\nexport const USER_UPDATE_BY_ADMIN_RESET = 'USER_UPDATE_BY_ADMIN_RESET';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import axios from 'axios';\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_BY_ADMIN_REQUEST,\r\n    USER_UPDATE_BY_ADMIN_SUCCESS,\r\n    USER_UPDATE_BY_ADMIN_FAIL\r\n} from '../constants/userConstants';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\n// Adding The API URL into a Variable\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const loginUser = (email, password) => async dispatch => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST });\r\n        const { data } = await axios.post(`${API_URL}/users/login`, { email, password });\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: ORDER_LIST_MY_RESET });\r\n    dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const registerUser = (name, email, password) => async dispatch => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n        const { data } = await axios.post(`${API_URL}/users`, { name, email, password });\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const getUserDetails = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.get(`${API_URL}/users/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = user => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.put(`${API_URL}/users/profile`, user, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_LIST_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.get(`${API_URL}/users`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    };\r\n};\r\n\r\nexport const deleteUser = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DELETE_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        await axios.delete(`${API_URL}/users/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({ type: USER_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateUser = user => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_BY_ADMIN_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.put(`${API_URL}/users/${user._id}`, user, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({ type: USER_UPDATE_BY_ADMIN_SUCCESS });\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n        dispatch({ type: USER_DETAILS_RESET });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_BY_ADMIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SearchBox = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type=\"text\"\r\n                name=\"q\"\r\n                placeholder=\"Search Products...\"\r\n                onChange={e => setKeyword(e.target.value)}\r\n                className=\"mr-sm-2 ml-sm-5\"\r\n            ></Form.Control>\r\n            <Button type=\"submit\"\r\n                variant=\"outline-success\"\r\n                className=\"p-2\"\r\n            >\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\n// External Imports\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Internal Imports\r\nimport { logoutUser } from '../redux/actions/userActions';\r\nimport SearchBox from '../components/SearchBox';\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logoutUser());\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" expand=\"md\" variant=\"dark\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id=\"username\">\r\n                                    <LinkContainer to=\"/profile\">\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link><i className='fas fa-user'></i> Sign In</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title=\"Administration\" id=\"admin\">\r\n                                    <LinkContainer to=\"/admin/users\">\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/admin/products\">\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to=\"/admin/orders\">\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n// External Imports \r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 1\r\n                            ? 'fas fa-star'\r\n                            : value >= 0.5\r\n                                ? 'fas fa-star-half-alt'\r\n                                : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 2\r\n                            ? 'fas fa-star'\r\n                            : value >= 1.5\r\n                                ? 'fas fa-star-half-alt'\r\n                                : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 3\r\n                            ? 'fas fa-star'\r\n                            : value >= 2.5\r\n                                ? 'fas fa-star-half-alt'\r\n                                : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 4\r\n                            ? 'fas fa-star'\r\n                            : value >= 3.5\r\n                                ? 'fas fa-star-half-alt'\r\n                                : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 5\r\n                            ? 'fas fa-star'\r\n                            : value >= 4.5\r\n                                ? 'fas fa-star-half-alt'\r\n                                : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating","import React from 'react';\r\n\r\n// External Imports\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Internal Imports \r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img\r\n                    src={product.image}\r\n                    variant='top'\r\n                    onError={e => {\r\n                        e.target.onerror = null; e.target.src = \"https://via.placeholder.com/450?text=Can't+Read+The+Image+Please+Edit+The+Image+With+URL\"\r\n                    }}\r\n                />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\r\n\r\n// External Imports\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nMessage.defaultProps = {\r\n    variant: \"info\"\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\n// External Imports\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"keyword\" content={keywords} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nMeta.defaultProps = {\r\n    title: \"Welcome to ProShop\",\r\n    description: \"We Sell The Best Electronics Products For Cheap\",\r\n    keywords: \"Electronics, Cheap Electronics, Buy Electronics\"\r\n};\r\n\r\nexport default Meta;\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","import axios from 'axios';\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants';\r\n\r\n// Adding The API URL into a Variable\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async dispatch => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n        const { data } = await axios.get(`${API_URL}/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listProductDetails = id => async dispatch => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n        const { data } = await axios.get(`${API_URL}/products/${id}`);\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data.product,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProduct = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        await axios.delete(`${API_URL}/products/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.post(`${API_URL}/products`, {}, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProduct = product => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.put(`${API_URL}/products/${product._id}`, product, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        await axios.post(`${API_URL}/products/${productId}/review`, review, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getTopRatedProducts = () => async dispatch => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST });\r\n        const { data } = await axios.get(`${API_URL}/products/top`);\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { getTopRatedProducts } from '../redux/actions/productAction';\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated);\r\n    const { loading, error, products } = productTopRated;\r\n\r\n    useEffect(() => {\r\n        dispatch(getTopRatedProducts());\r\n    }, [dispatch]);\r\n\r\n    return loading ? <Loader /> : error ? <Message>{error}</Message> : (\r\n        <Carousel pause=\"hover\"\r\n            className=\"bg-dark\"\r\n        >\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className=\"carousel-caption\">\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/products/${x + 1}`}>\r\n                    <Pagination.Item active={x + 1 === page}>\r\n                        {x + 1}\r\n                    </Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react';\r\nimport { Fragment } from 'react';\r\n\r\n// External Imports\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Internal Imports\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Meta from '../components/Meta';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Paginate from '../components/Paginate';\r\nimport { listProducts } from '../redux/actions/productAction';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products, page, pages } = useSelector(state => state.productList);\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to=\"/\" className=\"btn btn-light\">go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Fragment>\r\n                    <Row>\r\n                        {products.map((product) => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate pages={pages} page={page} keyword={keyword ? keyword : \"\"} />\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, Fragment, useState } from 'react';\r\n\r\n// External Imports\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Internal Imports\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Meta from '../components/Meta';\r\nimport { listProductDetails, createProductReview } from '../redux/actions/productAction';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../redux/constants/productConstants';\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n    const { error: errorProductReview, success: successProductReview } = productReviewCreate;\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert(\"Review Submitted\");\r\n            setRating(0);\r\n            setComment('');\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n        }\r\n        dispatch(listProductDetails(match.params.id));\r\n    }, [dispatch, match, userInfo, successProductReview]);\r\n\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message>{error}</Message>\r\n            ) : (\r\n                <Fragment>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image\r\n                                src={product.image}\r\n                                alt={product.name}\r\n                                fluid\r\n                                onError={e => {\r\n                                    e.target.onerror = null; e.target.src = \"https://via.placeholder.com/450?text=Can't+Read+The+Image+Please+Edit+The+Image+With+URL\"\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating\r\n                                        value={product.rating}\r\n                                        text={`${product.numReviews}reviews`}\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={qty}\r\n                                                        onChange={e => setQty(e.target.value)}\r\n                                                    >\r\n                                                        {[...Array(product.countInStock).keys()].map(\r\n                                                            (x) => (\r\n                                                                <option key={x + 1} value={x + 1}>\r\n                                                                    {x + 1}\r\n                                                                </option>\r\n                                                            )\r\n                                                        )}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className='btn-block'\r\n                                            type='button'\r\n                                            disabled={product.countInStock === 0}\r\n                                        >\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            <ListGroup variant=\"flush\">\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && <Message variant=\"danger\">{errorProductReview}</Message>}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId=\"rating\">\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={rating}\r\n                                                    onChange={e => setRating(e.target.value)}\r\n                                                >\r\n                                                    <option value=\"\">Select ...</option>\r\n                                                    <option value=\"1\">1 - Poor</option>\r\n                                                    <option value=\"2\">2 - Fair</option>\r\n                                                    <option value=\"3\">3 - Good</option>\r\n                                                    <option value=\"4\">4 - Very Good</option>\r\n                                                    <option value=\"5\">5 - Excellent</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control as=\"textarea\"\r\n                                                    onChange={e => setComment(e.target.value)}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Button type=\"submit\"\r\n                                                variant=\"primary\"\r\n                                                disabled={comment === \"\"}\r\n                                            >\r\n                                                Submit\r\n                                                    </Button>\r\n                                        </Form>\r\n                                    ) : <Message>Please <Link to=\"/login\">Sign In</Link> to Write a Review</Message>}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProductScreen;","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';","import axios from 'axios';\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants';\r\n\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`${API_URL}/products/${id}`);\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data.product._id,\r\n            name: data.product.name,\r\n            image: data.product.image,\r\n            price: data.product.price,\r\n            countInStock: data.product.countInStock,\r\n            qty,\r\n        },\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeItemFromCart = id => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    });\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = fullAddress => dispatch => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: fullAddress\r\n    });\r\n    localStorage.setItem('shippingAddress', JSON.stringify(fullAddress));\r\n};\r\n\r\nexport const savePaymentMethod = paymentMethod => dispatch => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod\r\n    });\r\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\r\n};\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\n\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeItemFromCart } from '../redux/actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = id => {\r\n        dispatch(removeItemFromCart(id));\r\n    };\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping');\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>Your cart is empty <Link to=\"/\">Go Back</Link></Message>\r\n                ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as='select'\r\n                                            value={item.qty}\r\n                                            onChange={e => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {[...Array(item.countInStock).keys()].map(\r\n                                                (x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                )\r\n                                            )}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            variant=\"light\"\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal: ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                        ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type=\"button\"\r\n                                className=\"btn btn-block\"\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed to Checkout\r\n                        </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col sm={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { loginUser } from '../redux/actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : '/';\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo) history.push(redirect);\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(email, password));\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={onFormSubmit}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter Email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">Sign In</Button>\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New Customer ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register Now</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import axios from 'axios';\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL\r\n} from '../constants/orderConstants';\r\n\r\n// Adding The API URL into a Variable\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const createOrder = order => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.post(`${API_URL}/orders`, order, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const getOrderByID = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.get(`${API_URL}/orders/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_PAY_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.put(`${API_URL}/orders/${id}/pay`, paymentResult, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        // if (message === 'Not authorized, token failed') {\r\n        //     dispatch(logout())\r\n        // }\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message,\r\n        });\r\n    };\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_LIST_MY_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.get(`${API_URL}/orders/my-orders`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    };\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_LIST_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.get(`${API_URL}/orders`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    };\r\n};\r\n\r\nexport const deliverOrder = order => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DELIVER_REQUEST });\r\n        const { userLogin: { userInfo } } = getState();\r\n        const { data } = await axios.put(`${API_URL}/orders/${order._id}/deliver`, {}, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: message,\r\n        });\r\n    };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../redux/actions/userActions';\r\nimport { listMyOrders } from '../redux/actions/orderActions';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const { success } = userUpdate;\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy);\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login');\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails(\"profile\"));\r\n                dispatch(listMyOrders());\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, user, userInfo]);\r\n\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage(\"Password Didn't Match\");\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant=\"danger\">{message}</Message>}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {success && <Message variant=\"success\">Profile Updated Successfully</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={onFormSubmit}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter Name\"\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter Email\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Enter Password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>Confirm Password:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                            placeholder=\"Should Match With Password\"\r\n                            value={confirmPassword}\r\n                            onChange={e => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant=\"danger\">{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : <i className=\"fas fa-times\" style={{ color: 'red' }}></i>}</td>\r\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : <i className=\"fas fa-times\" style={{ color: 'red' }}></i>}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant=\"light\" className=\"btn-sm\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { registerUser } from '../redux/actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : '/';\r\n\r\n    const dispatch = useDispatch();\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    useEffect(() => {\r\n        if (userInfo) history.push(redirect);\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage(\"Password Didn't Match\");\r\n        } else {\r\n            dispatch(registerUser(name, email, password));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={onFormSubmit}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter Name\"\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter Email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Label>Confirm Password:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        placeholder=\"Should Match With Password\"\r\n                        value={confirmPassword}\r\n                        onChange={e => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">Sign Up</Button>\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Already Signed Up ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login Now</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../redux/actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n        history.push('/payment');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping Address</h1>\r\n            <Form onSubmit={onFormSubmit}>\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>Address:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        placeholder=\"Enter Address\"\r\n                        value={address}\r\n                        required\r\n                        onChange={e => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>City:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        placeholder=\"Enter City\"\r\n                        value={city}\r\n                        required\r\n                        onChange={e => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"postalCode\">\r\n                    <Form.Label>Postal Code:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"postalCode\"\r\n                        placeholder=\"Enter Postal Code\"\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={e => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>Country:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"country\"\r\n                        placeholder=\"Enter Country\"\r\n                        value={country}\r\n                        required\r\n                        onChange={e => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { savePaymentMethod } from '../redux/actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping');\r\n    };\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={onFormSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n\r\n    if (!cart.shippingAddress.address) {\r\n        history.push('/shipping');\r\n    } else if (!cart.paymentMethod) {\r\n        history.push('/payment');\r\n    };\r\n\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    };\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2);\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate);\r\n    const { order, success, error } = orderCreate;\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/orders/${order._id}`);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                            </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderByID, payOrder, deliverOrder } from '../redux/actions/orderActions';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../redux/constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id;\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const orderPay = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver);\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2);\r\n        };\r\n\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push(\"/login\");\r\n        };\r\n\r\n        const addPayPalScript = async () => {\r\n            const API_URL = 'http://localhost:5000/api';\r\n            const { data: clientId } = await axios.get(`${API_URL}/config/paypal`);\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            };\r\n            document.body.appendChild(script);\r\n        };\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET });\r\n            dispatch(getOrderByID(orderId));\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript();\r\n            } else {\r\n                setSdkReady(true)\r\n            };\r\n        };\r\n    }, [dispatch, orderId, successPay, order, successDeliver, userInfo, history]);\r\n\r\n    const successPaymentHandler = paymentResult => {\r\n        dispatch(payOrder(orderId, paymentResult));\r\n    };\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order));\r\n    };\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <Fragment>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>{' '}\r\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>\r\n                                    Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>Order is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type=\"button\" className=\"btn btn-block\" onClick={deliverHandler}>\r\n                                        Mark As Delivered\r\n                                            </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { listUsers, deleteUser } from '../redux/actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector(state => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userDelete = useSelector(state => state.userDelete);\r\n    const { success: successDelete } = userDelete;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers());\r\n        } else {\r\n            history.push('/login');\r\n        };\r\n    }, [dispatch, history, successDelete, userInfo]);\r\n\r\n    const deleteHandler = id => {\r\n        if (window.confirm(\"Are You Sure You Want to Delete This User\")) {\r\n            dispatch(deleteUser(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Users</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>\r\n                                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                                </td>\r\n                                <td>\r\n                                    {user.isAdmin ? (\r\n                                        <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button\r\n                                        variant='danger'\r\n                                        className='btn-sm'\r\n                                        onClick={() => deleteHandler(user._id)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../redux/actions/userActions';\r\nimport { USER_UPDATE_BY_ADMIN_RESET } from '../redux/constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n\r\n    const userId = match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdater = useSelector(state => state.userUpdater);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdater;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_BY_ADMIN_RESET });\r\n            history.push('/admin/users');\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId));\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n                setIsAdmin(user.isAdmin);\r\n            }\r\n        }\r\n    }, [dispatch, history, userId, user, successUpdate]);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link to='/admin/users' className='btn btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Button, Table, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { listProducts, deleteProduct, createProduct } from '../redux/actions/productAction';\r\nimport { PRODUCT_CREATE_RESET } from '../redux/constants/productConstants';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, pages, page } = productList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const { success: successDelete, error: errorDelete, loading: loadingDelete } = productDelete;\r\n\r\n    const productCreate = useSelector(state => state.productCreate);\r\n    const { success: successCreate, error: errorCreate, loading: loadingCreate, product: createdProduct } = productCreate;\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET });\r\n        if (!userInfo.isAdmin) {\r\n            history.push(\"/login\");\r\n        };\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`);\r\n        } else {\r\n            dispatch(listProducts('', pageNumber));\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber]);\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct());\r\n    };\r\n\r\n    const deleteHandler = id => {\r\n        if (window.confirm(\"Are You Sure You Want to Delete This Product\")) {\r\n            dispatch(deleteProduct(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className=\"my-3\" onClick={createProductHandler}><i className=\"fas fa-plus\"></i> Add a Product</Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map((product) => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>${product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button\r\n                                        variant='danger'\r\n                                        className='btn-sm'\r\n                                        onClick={() => deleteHandler(product._id)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../redux/actions/productAction';\r\nimport { PRODUCT_UPDATE_RESET } from '../redux/constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n\r\n    const productId = match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET });\r\n            history.push('/admin/products');\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId));\r\n            } else {\r\n                setName(product.name);\r\n                setPrice(product.price);\r\n                setImage(product.image);\r\n                setBrand(product.brand);\r\n                setCategory(product.category);\r\n                setCountInStock(product.countInStock);\r\n                setDescription(product.description);\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n    const uploadFileHandler = async e => {\r\n        const API_URL = 'http://localhost:5000/api';\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n        try {\r\n            const { data } = await axios.post(`${API_URL}/upload`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch (error) {\r\n            console.error(error.message);\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link to='/admin/products' className='btn btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter Price'\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Image URL'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id=\"image-file\"\r\n                                label=\"Choose File\"\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            >\r\n                                {uploading && <Loader />}\r\n                            </Form.File>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Brand Name'\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter Count In Stock'\r\n                                value={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Category'\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\"\r\n                                value={description}\r\n                                placeholder=\"Enter Description\"\r\n                                onChange={e => setDescription(e.target.value)}\r\n                                style={{ height: \"130px\", resize: \"none\", overflowY: \"scroll\" }}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary' onClick={submitHandler}>Update</Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { listOrders } from '../redux/actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderList = useSelector(state => state.orderList);\r\n    const { loading, error, orders } = orderList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>${order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/orders/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i> Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\n\n// External Imports\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n// Internal Imports\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { CartScreen, HomeScreen, ProductScreen, LoginScreen, ProfileScreen, RegisterScreen, ShippingScreen, PaymentScreen, PlaceOrderScreen, OrderScreen, UserListScreen, UserEditScreen, ProductListScreen, ProductEditScreen, OrderListScreen } from './screens';\n\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route exact path=\"/\" component={HomeScreen} />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route exact path=\"/login\" component={LoginScreen} />\n          <Route exact path=\"/register\" component={RegisterScreen} />\n          <Route exact path=\"/profile\" component={ProfileScreen} />\n          <Route exact path=\"/shipping\" component={ShippingScreen} />\n          <Route exact path=\"/payment\" component={PaymentScreen} />\n          <Route exact path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route exact path=\"/orders/:id\" component={OrderScreen} />\n          <Route exact path=\"/admin/users\" component={UserListScreen} />\n          <Route exact path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route exact path=\"/admin/products\" component={ProductListScreen} />\n          <Route exact path=\"/admin/products/:pageNumber\" component={ProductListScreen} />\n          <Route exact path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route exact path=\"/admin/orders\" component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants';\r\n\r\nconst cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === existItem.product ? item : x\r\n                    ),\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                }\r\n            };\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            };\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            };\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\n\r\nexport default cartReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducer';\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateReducer, userListReducer, userDeleteReducer, userUpdaterReducer } from './reducers/userReducer';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\r\nimport cartReducer from './reducers/cartReducer';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdater: userUpdaterReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : null;\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n        paymentMethod: paymentMethodFromStorage\r\n    },\r\n    userLogin: {\r\n        userInfo: userInfoFromStorage\r\n    }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload };\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload };\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_BY_ADMIN_REQUEST,\r\n    USER_UPDATE_BY_ADMIN_SUCCESS,\r\n    USER_UPDATE_BY_ADMIN_FAIL,\r\n    USER_UPDATE_BY_ADMIN_RESET\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_RESET:\r\n            return;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LIST_RESET:\r\n            return { loading: false, users: [] };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const userUpdaterReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_BY_ADMIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_BY_ADMIN_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_BY_ADMIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_BY_ADMIN_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_CREATE_SUCCESS:\r\n            return { loading: false, success: true, order: action.payload };\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload };\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_PAY_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case ORDER_PAY_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case ORDER_PAY_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return { ...state, loading: true };\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return { loading: false, orders: action.payload };\r\n        case ORDER_LIST_MY_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_LIST_SUCCESS:\r\n            return { loading: false, orders: action.payload };\r\n        case ORDER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}